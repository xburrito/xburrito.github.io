<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xBurrito&#39;s Portfolio</title>
    <link>https://xburrito.github.io/</link>
    <description>Recent content on xBurrito&#39;s Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Feb 2021 13:07:00 -0500</lastBuildDate><atom:link href="https://xburrito.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Résumé</title>
      <link>https://xburrito.github.io/resume/</link>
      <pubDate>Thu, 11 Feb 2021 13:23:21 -0500</pubDate>
      
      <guid>https://xburrito.github.io/resume/</guid>
      <description>Relevant links Résumé attached: Link
Github: https://github.com/xburrito
LinkedIn: https://www.linkedin.com/in/awxchang/
 Programming Languages    Programming Languages Proficiency     Javascript    Pthon    C    C++    Java    HTML/CSS    SQL      Relevant coursework for Computer Science (CCNY)  Fundamentals in Computer Systems Data Structures &amp;amp; Algorithms Programming Languages (Python) Scientific Programming Topics in Software Engineering Operating Systems Computer Organization (lab) Programming Language Paradigms Image Processing   Qualifications Frameworks and Tools:</description>
    </item>
    
    <item>
      <title>MERN Todo App</title>
      <link>https://xburrito.github.io/projects/project2/</link>
      <pubDate>Thu, 11 Feb 2021 13:23:00 -0500</pubDate>
      
      <guid>https://xburrito.github.io/projects/project2/</guid>
      <description>Langauges used: Javascript, HTML, CSS Github Project Link Created during LB internship
This project was bootstrapped with Create React App.
Todo App Requirements  Tier 1: User creates a list with a name. After creation, user is presented with a field and button that lets the user add a todo item to the list Tier 2: User has ability to delete todo items from the list Tier 3: User can create multiple lists.</description>
    </item>
    
    <item>
      <title>Neural Network</title>
      <link>https://xburrito.github.io/projects/project4/</link>
      <pubDate>Thu, 11 Feb 2021 13:23:00 -0500</pubDate>
      
      <guid>https://xburrito.github.io/projects/project4/</guid>
      <description>Langauges used: C++ Github Project Link Description: This is a simple A.I. learning project that takes in arrays of size 12 and determines if the arrays fall under the letter H, the letter L, or neither. In the case that it doesn&amp;rsquo;t fall into either category, they would be marked as noise arrays and excluded from the A.I. learning algorithms to reduce the chances of accuracy decay.
 Ex. Given this array: [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], The first thing that we could do is beautify the array into a 4x3 structure:</description>
    </item>
    
    <item>
      <title>Social Platform</title>
      <link>https://xburrito.github.io/projects/project1/</link>
      <pubDate>Thu, 11 Feb 2021 13:23:00 -0500</pubDate>
      
      <guid>https://xburrito.github.io/projects/project1/</guid>
      <description>Langauges used: Java, HTML, CSS Github Project Link Team: Gabriel Espinoza, Albert (Bryan) Chang, Orion Cadri, Ide
Description: The objective was to create a miniature team platform with core functionalities such as:
 Sign up &amp;amp; sign in Create personal pages Connect and collaborate with other users User status [ordinary user, VIP, admin] based on reputation score grant privileges to users based on user status develop a voting system   Prepare and Run:</description>
    </item>
    
    <item>
      <title>Web Project</title>
      <link>https://xburrito.github.io/projects/project3/</link>
      <pubDate>Thu, 11 Feb 2021 13:23:00 -0500</pubDate>
      
      <guid>https://xburrito.github.io/projects/project3/</guid>
      <description>Langauges used: HTML &amp;amp; CSS Github Project Link Purpose of this project:
  Dabble in the syntax of HTML, CSS, and maybe incorporate JS later on (not sure yet)
  Learn about the responsiveness of web pages across computer, tablet, and mobile platforms
  CSS markup is labeled to show where everything is located for easier appearance modification of the site
  Did not use FOUNDATION as a template responsive css file for the site</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://xburrito.github.io/bio/</link>
      <pubDate>Thu, 11 Feb 2021 13:18:15 -0500</pubDate>
      
      <guid>https://xburrito.github.io/bio/</guid>
      <description>Hello there!  My name is Bryan and I&amp;rsquo;m a fourth year computer science student wrapping up my final semester at CCNY for my degree in B.S. computer science. But this here information ain&amp;rsquo;t about school and work right?
 I love fried chicken (lookin&#39; at you Jollibees) and chicken over rice (usually a hit or miss. With my luck, its more often a miss) To make this screen look a tad bit professional to the person peeking over your shoulder, here&amp;rsquo;s a graph of the few things I enjoy in life:</description>
    </item>
    
    <item>
      <title>Algorithms</title>
      <link>https://xburrito.github.io/course/course4/</link>
      <pubDate>Thu, 11 Feb 2021 13:15:02 -0500</pubDate>
      
      <guid>https://xburrito.github.io/course/course4/</guid>
      <description>Course Code: Csc 22000 Langauges used: Python Topics covered within this curriculum:
 Algorithms and Problems:  sorting algorithms bubblesort insertion sort Randomized Algorithms Quicksort Divide-and-Conquer Mergesort Analysis of Recursions   Data Structures  Heapsort   Others  Radix Sort Binary search trees: Find, Insert, Delete, Rotate Spanning Trees Rebalancing algorithms Graph analysis: Depth first search (DFS) and Breadth first search (BFS) Shortest path: Dijkstra&amp;rsquo;s Algorithm Dynamic programming algorithms     O-Notation: Focused mainly on time and space complexity when running through algorithms Analysis of Expected Runtime: We calculate each algorithm&amp;rsquo;s Big-O to determine the most efficient algorithms when handling problems.</description>
    </item>
    
    <item>
      <title>Data Structures</title>
      <link>https://xburrito.github.io/course/course1/</link>
      <pubDate>Thu, 11 Feb 2021 13:15:02 -0500</pubDate>
      
      <guid>https://xburrito.github.io/course/course1/</guid>
      <description>Course Code: Csc 21200 Langauges used: C++ In this course, I have gone over the basics of data structures.
Linked Lists Description: We covered the functionality of pointers and nodes in order to construct linked lists which could be dynamically resized unlike predefined arrays. On top of constructing a linked list, we gone over appending a node to the head, tail, or anywhere within the linked list.
Stacks Description: Stacks follow last in, first out (LIFO) procedures.</description>
    </item>
    
    <item>
      <title>Image Processing</title>
      <link>https://xburrito.github.io/course/course5/</link>
      <pubDate>Thu, 11 Feb 2021 13:15:02 -0500</pubDate>
      
      <guid>https://xburrito.github.io/course/course5/</guid>
      <description>Course Code: Csc 47000 Langauges used: C++ This course involves using compression based algorithms alongside A.I. to modify image samples as well as reverse the process back to the original state or even aim to improve its original quality. The topics covered throughout the course:
 Ability to implement point operations such as:  thresholding quantization gamma correction histogram manipulation halftoning implement neighborhood operations such as:  blurring sharpening convolution     Knowledge of image reconstruction, re-sampling and antialiasing.</description>
    </item>
    
    <item>
      <title>Operating Systems</title>
      <link>https://xburrito.github.io/course/course3/</link>
      <pubDate>Thu, 11 Feb 2021 13:15:02 -0500</pubDate>
      
      <guid>https://xburrito.github.io/course/course3/</guid>
      <description>Course Code: Csc 33200 Langauges used: C, C++, Java Topics covered throughout the semester both in class and in lab:
 Types of Operating Systems I/O Structure Storage Structure and Storage Hierarchy Operating System Services Process Scheduling Algorithms Inter Process Communication Dead Lock and Dead Lock Prevention and Avoidance Paging, Segmentation, Paging with Segmentation Virtual Memory File Concepts File Accessing methods Memory Management  </description>
    </item>
    
    <item>
      <title>Software Design</title>
      <link>https://xburrito.github.io/course/course2/</link>
      <pubDate>Thu, 11 Feb 2021 13:15:02 -0500</pubDate>
      
      <guid>https://xburrito.github.io/course/course2/</guid>
      <description>Course Code: Csc 22100 Langauges used: Java In this course, we worked towards understanding key topics such as when working through each lab assignment:
  Public/Private Classes
  Setters/Getters
  Abstract and Interface class
  Description: This contains methods within the class without showing you what is under the hood. The methods could be called and expected to perform as intended when provided the right parameteres, if any.</description>
    </item>
    
  </channel>
</rss>
